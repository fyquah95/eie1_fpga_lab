/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("display")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 28;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("display[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display";
}

SIGNAL("tick")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("o[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

SIGNAL("o[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "o";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500000;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("display[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 399.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 399.8;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 399.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("display[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 199.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 1399.8;
		}
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1209.9;
	}
}

TRANSITION_LIST("display[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 199.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 199.8;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 199.8;
		LEVEL 1 FOR 10.1;
	}
}

TRANSITION_LIST("display[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 199.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 200.0;
				LEVEL 1 FOR 400.0;
			}
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 599.8;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 599.8;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 409.9;
	}
}

TRANSITION_LIST("display[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 399.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 1799.8;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1409.9;
	}
}

TRANSITION_LIST("display[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 999.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 1599.8;
		}
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 609.9;
	}
}

TRANSITION_LIST("display[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 399.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 799.8;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 799.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("display[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.9;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 39.8;
			NODE
			{
				REPEAT = 9;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 100.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 39.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 39.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("display[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 19.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 9;
				LEVEL 0 FOR 60.0;
				LEVEL 1 FOR 140.0;
			}
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 139.8;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 139.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 129.9;
	}
}

TRANSITION_LIST("display[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 19.9;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19.8;
		LEVEL 1 FOR 10.1;
	}
}

TRANSITION_LIST("display[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 19.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 8;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 20.0;
					LEVEL 1 FOR 40.0;
				}
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 60.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 59.8;
		}
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 59.8;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 49.9;
	}
}

TRANSITION_LIST("display[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 39.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 9;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 180.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 179.8;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 179.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 149.9;
	}
}

TRANSITION_LIST("display[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 99.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 9;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 159.8;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 159.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 69.9;
	}
}

TRANSITION_LIST("display[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.9;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 79.8;
			NODE
			{
				REPEAT = 9;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 79.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 79.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("display[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.9;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 3.8;
			NODE
			{
				REPEAT = 99;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 99;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.8;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.1;
	}
}

TRANSITION_LIST("display[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 99;
				LEVEL 0 FOR 6.0;
				LEVEL 1 FOR 14.0;
			}
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 13.8;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.1;
	}
}

TRANSITION_LIST("display[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.9;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.1;
	}
}

TRANSITION_LIST("display[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 98;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 2.0;
					LEVEL 1 FOR 4.0;
				}
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 6.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 5.8;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.1;
	}
}

TRANSITION_LIST("display[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 99;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 18.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 17.8;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.1;
	}
}

TRANSITION_LIST("display[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 9.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 99;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 16.0;
			}
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 15.8;
		}
		LEVEL 0 FOR 0.1;
	}
}

TRANSITION_LIST("display[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.9;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 7.8;
			NODE
			{
				REPEAT = 99;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 7.8;
		NODE
		{
			REPEAT = 99;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 7.8;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.1;
	}
}

TRANSITION_LIST("display[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.3;
		NODE
		{
			REPEAT = 999;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 0.4;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.4;
			}
			LEVEL 0 FOR 0.4;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.2;
		NODE
		{
			REPEAT = 999;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.4;
		}
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.4;
		}
		LEVEL 0 FOR 0.1;
	}
}

TRANSITION_LIST("display[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.1;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 0.6;
				LEVEL 1 FOR 1.4;
			}
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 1.2;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 1.4;
		}
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 1.3;
	}
}

TRANSITION_LIST("display[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 998;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.6;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.1;
	}
}

TRANSITION_LIST("display[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.1;
		NODE
		{
			REPEAT = 998;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.4;
			}
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.4;
		}
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.6;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.4;
		}
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.6;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 0.2;
					LEVEL 1 FOR 0.4;
				}
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.4;
			}
		}
		NODE
		{
			REPEAT = 999;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.4;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.4;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.4;
			}
		}
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("display[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.3;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 1.8;
			}
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 1.6;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 1.5;
	}
}

TRANSITION_LIST("display[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 0.4;
				LEVEL 1 FOR 1.6;
			}
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 1.4;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 1.6;
		}
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.7;
	}
}

TRANSITION_LIST("display[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.3;
		NODE
		{
			REPEAT = 999;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.8;
			LEVEL 0 FOR 0.4;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.6;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 0.4;
				LEVEL 1 FOR 0.4;
				LEVEL 0 FOR 0.4;
				LEVEL 1 FOR 0.8;
			}
			LEVEL 0 FOR 0.4;
		}
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.6;
		NODE
		{
			REPEAT = 999;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.8;
		}
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.6;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.8;
		}
		LEVEL 0 FOR 0.1;
	}
}

TRANSITION_LIST("tick")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.1;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 10000.0;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 9998.1;
	}
}

TRANSITION_LIST("o[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1599.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 399.8;
			LEVEL 0 FOR 1600.0;
		}
		LEVEL 1 FOR 399.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("o[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 799.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 1199.8;
		}
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 409.9;
	}
}

TRANSITION_LIST("o[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 399.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 799.8;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 409.9;
	}
}

TRANSITION_LIST("o[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 199.9;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 199.8;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 200.0;
				LEVEL 1 FOR 200.0;
			}
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 199.8;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 199.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("o[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 159.9;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 39.8;
			NODE
			{
				REPEAT = 9;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 39.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 39.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("o[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 79.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 9;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 120.0;
			}
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 119.8;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 119.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 49.9;
	}
}

TRANSITION_LIST("o[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.9;
		NODE
		{
			REPEAT = 48;
			NODE
			{
				REPEAT = 9;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 79.8;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 79.8;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 49.9;
	}
}

TRANSITION_LIST("o[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19.9;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 19.8;
			NODE
			{
				REPEAT = 49;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 19.8;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 19.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("o[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.9;
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 3.8;
			NODE
			{
				REPEAT = 99;
				LEVEL 0 FOR 16.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 99;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 3.8;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("o[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 99;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 11.8;
		}
		LEVEL 1 FOR 2.1;
	}
}

TRANSITION_LIST("o[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.9;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 99;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 8.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 7.8;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.1;
	}
}

TRANSITION_LIST("o[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.9;
		NODE
		{
			REPEAT = 499;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 1.8;
			NODE
			{
				REPEAT = 499;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 499;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.1;
	}
}

TRANSITION_LIST("o[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 999;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 1.6;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 0.2;
			NODE
			{
				REPEAT = 999;
				LEVEL 0 FOR 1.6;
				LEVEL 1 FOR 0.4;
			}
			LEVEL 0 FOR 1.6;
		}
		LEVEL 1 FOR 0.2;
		NODE
		{
			REPEAT = 999;
			LEVEL 0 FOR 1.6;
			LEVEL 1 FOR 0.4;
		}
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 0.2;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 1.6;
			LEVEL 1 FOR 0.4;
		}
		LEVEL 0 FOR 0.1;
	}
}

TRANSITION_LIST("o[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.7;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 999;
				LEVEL 1 FOR 0.8;
				LEVEL 0 FOR 1.2;
			}
			LEVEL 1 FOR 0.8;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.8;
			LEVEL 0 FOR 1.2;
		}
		LEVEL 1 FOR 0.8;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("o[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.3;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 999;
				LEVEL 1 FOR 0.4;
				LEVEL 0 FOR 0.4;
				LEVEL 1 FOR 0.4;
				LEVEL 0 FOR 0.8;
			}
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.6;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.8;
		}
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("o[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.1;
		NODE
		{
			REPEAT = 50;
			NODE
			{
				REPEAT = 4998;
				LEVEL 1 FOR 0.2;
				LEVEL 0 FOR 0.2;
			}
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.4;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.1;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "display";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "display[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "display[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "tick";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "o[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "o[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 31;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
